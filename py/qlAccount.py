# Form implementation generated from reading ui file 'qlAccount.ui'
#
# Created by: PyQt6 UI code generator 6.7.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import sqlite3
from tkinter import messagebox

from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_QuanLyTaiKhoan(object):
    def setupUi(self, QuanLyTaiKhoan):
        QuanLyTaiKhoan.setObjectName("QuanLyTaiKhoan")
        QuanLyTaiKhoan.resize(790, 545)
        self.centralwidget = QtWidgets.QWidget(parent=QuanLyTaiKhoan)
        self.centralwidget.setObjectName("centralwidget")
        self.tblTaiKhoan = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.tblTaiKhoan.setGeometry(QtCore.QRect(40, 40, 561, 311))
        self.tblTaiKhoan.setObjectName("tblTaiKhoan")
        self.tblTaiKhoan.setColumnCount(3)
        self.tblTaiKhoan.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tblTaiKhoan.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblTaiKhoan.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblTaiKhoan.setHorizontalHeaderItem(2, item)
        self.btnAdd = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnAdd.setGeometry(QtCore.QRect(640, 40, 111, 51))
        self.btnAdd.setObjectName("btnAdd")
        self.btnSua = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnSua.setGeometry(QtCore.QRect(640, 110, 111, 51))
        self.btnSua.setObjectName("btnSua")
        self.btnXoa = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnXoa.setGeometry(QtCore.QRect(640, 180, 111, 51))
        self.btnXoa.setObjectName("btnXoa")
        self.btnSeach = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnSeach.setGeometry(QtCore.QRect(640, 250, 111, 51))
        self.btnSeach.setObjectName("btnSeach")
        self.btnRefesh = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnRefesh.setGeometry(QtCore.QRect(640, 320, 111, 51))
        self.btnRefesh.setObjectName("btnRefesh")
        self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(40, 440, 47, 13))
        self.label_3.setObjectName("label_3")
        self.txtUser = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtUser.setGeometry(QtCore.QRect(120, 370, 141, 31))
        self.txtUser.setObjectName("txtUser")
        self.txtPass = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtPass.setGeometry(QtCore.QRect(120, 430, 141, 31))
        self.txtPass.setObjectName("txtPass")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 380, 71, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(310, 380, 81, 16))
        self.label_2.setObjectName("label_2")
        self.comboBox = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(410, 370, 141, 31))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        QuanLyTaiKhoan.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=QuanLyTaiKhoan)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 790, 26))
        self.menubar.setObjectName("menubar")
        QuanLyTaiKhoan.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=QuanLyTaiKhoan)
        self.statusbar.setObjectName("statusbar")
        QuanLyTaiKhoan.setStatusBar(self.statusbar)

        self.retranslateUi(QuanLyTaiKhoan)
        QtCore.QMetaObject.connectSlotsByName(QuanLyTaiKhoan)

        self.load_data()
        self.tblTaiKhoan.itemDoubleClicked.connect(self.Hien_thi)
        self.btnRefesh.clicked.connect(self.Lam_moi)
        self.btnSeach.clicked.connect(self.tim_kiem)
        self.btnAdd.clicked.connect(self.them_taikhoan)
        self.btnSua.clicked.connect(self.sua_taikhoan)
        self.btnXoa.clicked.connect(self.xoa_taikhoan)

    def retranslateUi(self, QuanLyTaiKhoan):
        _translate = QtCore.QCoreApplication.translate
        QuanLyTaiKhoan.setWindowTitle(_translate("QuanLyTaiKhoan", "QuanLyTaiKhoan"))
        item = self.tblTaiKhoan.horizontalHeaderItem(0)
        item.setText(_translate("QuanLyTaiKhoan", "User"))
        item = self.tblTaiKhoan.horizontalHeaderItem(1)
        item.setText(_translate("QuanLyTaiKhoan", "Password"))
        item = self.tblTaiKhoan.horizontalHeaderItem(2)
        item.setText(_translate("QuanLyTaiKhoan", "Loại tài khoản"))
        self.btnAdd.setText(_translate("QuanLyTaiKhoan", "Thêm"))
        self.btnSua.setText(_translate("QuanLyTaiKhoan", "Sửa"))
        self.btnXoa.setText(_translate("QuanLyTaiKhoan", "Xóa"))
        self.btnSeach.setText(_translate("QuanLyTaiKhoan", "Tìm kiếm"))
        self.btnRefesh.setText(_translate("QuanLyTaiKhoan", "Làm mới"))
        self.label_3.setText(_translate("QuanLyTaiKhoan", "Pass"))
        self.label.setText(_translate("QuanLyTaiKhoan", "User"))
        self.label_2.setText(_translate("QuanLyTaiKhoan", "Loại tài khoản"))
        self.comboBox.setItemText(0, _translate("QuanLyTaiKhoan", "Admin"))
        self.comboBox.setItemText(1, _translate("QuanLyTaiKhoan", "SinhVien"))

    def load_data(self):
        conn = sqlite3.connect('ql_DiemHeDH.db')
        cursor = conn.cursor()
        # Thực hiện truy vấn SQL để lấy tất cả các hàng từ bảng
        cursor.execute('''SELECT * FROM ql_TaiKhoan''')
        taikhoan = cursor.fetchall()

        self.tblTaiKhoan.setRowCount(len(taikhoan))
        # Duyệt qua từng hàng dữ liệu và từng cột dữ liệu trong kết quả truy vấn
        for row_index, row_data in enumerate(taikhoan):
            for col_index, col_data in enumerate(row_data):
                self.tblTaiKhoan.setItem(row_index, col_index, QtWidgets.QTableWidgetItem(str(col_data)))
        conn.close()

    def Hien_thi(self, item):
        selected_row = item.row()
        User = self.tblTaiKhoan.item(selected_row, 0).text()
        Pass = self.tblTaiKhoan.item(selected_row, 1).text()
        LaoiTK = self.tblTaiKhoan.item(selected_row, 2).text()

        # Hiển thị giá trị trong các lineEdit
        self.txtUser.setText(User)
        self.txtPass.setText(Pass)
        self.comboBox.setCurrentText(LaoiTK)

    def Lam_moi(self):
        self.txtUser.clear()
        self.txtPass.clear()
        self.load_data()

    def tim_kiem(self):
        User = self.txtUser.text()
        Pass = self.txtPass.text()
        LoaiTK = self.comboBox.currentText()

        # Xóa dữ liệu hiện có trong tableWidget
        self.tblTaiKhoan.clearContents()

        # Kết nối đến cơ sở dữ liệu
        conn = sqlite3.connect('ql_DiemHeDH.db')
        cursor = conn.cursor()

        cursor.execute(
            "SELECT * FROM ql_TaiKhoan WHERE User LIKE ? AND Password LIKE ? AND LoaiTaiKhoan LIKE ?",
            ('%' + User + '%', '%' + Pass + '%', '%' + LoaiTK + '%'
             ))
        taikhoan = cursor.fetchall()

        if not taikhoan:
            # Hiển thị thông báo "Không có môn học nào"
            self.tblTaiKhoan.setRowCount(0)
            messagebox.showinfo('Thông báo', 'Không có tài khoản nào.')
            self.load_data()
        else:
            # Hiển thị danh sách môn học
            self.tblTaiKhoan.setRowCount(len(taikhoan))
            for row_index, row_data in enumerate(taikhoan):
                for col_index, col_data in enumerate(row_data):
                    self.tblTaiKhoan.setItem(row_index, col_index, QtWidgets.QTableWidgetItem(str(col_data)))

        conn.close()

    def them_taikhoan(self):
        User = self.txtUser.text()
        Pass = self.txtPass.text()
        LoaiTK = self.comboBox.currentText()

        try:
            conn = sqlite3.connect('ql_DiemHeDH.db')
            cursor = conn.cursor()

            # Kiểm tra xem tài khoản đã tồn tại hay chưa
            cursor.execute("SELECT COUNT(*) FROM ql_TaiKhoan WHERE `User` = ?", (User,))
            existing_count = cursor.fetchone()[0]

            if existing_count > 0:
                messagebox.showinfo('Thông báo', 'Tài khoản đã tồn tại')
            else:
                # Thêm dữ liệu vào bảng ql_TaiKhoan
                cursor.execute(
                    "INSERT INTO ql_TaiKhoan (`User`, `Password`, `LoaiTaiKhoan`) VALUES (?, ?, ?)",
                    (User, Pass, LoaiTK))
                conn.commit()
                messagebox.showinfo('Thông báo', 'Thêm thành công tài khoản')
                self.load_data()  # Cập nhật dữ liệu trong bảng

        except sqlite3.Error as e:
            print("Lỗi khi thêm tài khoản:", e)
        finally:
            conn.close()

    def sua_taikhoan(self):
        User = self.txtUser.text()
        Pass = self.txtPass.text()
        LoaiTK = self.comboBox.currentText()

        # Kết nối đến cơ sở dữ liệu
        conn = sqlite3.connect('ql_DiemHeDH.db')
        cursor = conn.cursor()

        # Sửa dữ liệu trong bảng "mon_hoc"
        cursor.execute("UPDATE ql_TaiKhoan SET Password = ?, LoaiTaiKhoan = ? WHERE User = ?",
                       (Pass, LoaiTK, User))
        conn.commit()

        messagebox.showinfo('Thông báo', 'Sửa thành công tài khoản')

        # Cập nhật lại dữ liệu trong tableWidget
        conn.close()

        self.load_data()

    def xoa_taikhoan(self):
        selected_row = self.tblTaiKhoan.currentRow()
        if selected_row == -1:
            messagebox.showinfo('Lỗi', 'Vui lòng chọn một hàng để xóa.')
            return

        # Lấy giá trị từ cột "MaMH" trong hàng được chọn
        User = self.tblTaiKhoan.item(selected_row, 0).text()

        # Kết nối đến cơ sở dữ liệu
        conn = sqlite3.connect('ql_DiemHeDH.db')
        cursor = conn.cursor()

        # Xóa dữ liệu trong bảng "mon_hoc"
        cursor.execute("DELETE FROM ql_TaiKhoan WHERE User=?", (User,))
        conn.commit()
        messagebox.showinfo('Thông báo', 'Xóa thành công tài khoản')

        # Cập nhật lại dữ liệu trong tableWidget
        conn.close()
        self.load_data()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    QuanLyTaiKhoan = QtWidgets.QMainWindow()
    ui = Ui_QuanLyTaiKhoan()
    ui.setupUi(QuanLyTaiKhoan)
    QuanLyTaiKhoan.show()
    sys.exit(app.exec())
